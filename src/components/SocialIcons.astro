---
import Link from '@/components/Link.astro'
import { buttonVariants } from '@/components/ui/button'
import type { Link as SocialLink } from '@/consts'
import { cn } from '@/lib/utils'
import { Icon } from 'astro-icon/components'

interface Props {
  links: SocialLink[]
  className?: string
}

const { links, className } = Astro.props

const iconMap = {
  Website: 'tabler:circle-filled',
  LinkedIn: 'tabler:brand-linkedin-filled',
  GitHub: 'tabler:brand-github',
  Twitter: 'lucide:twitter',
  Bluesky: 'tabler:brand-bluesky',
  Threads: 'tabler:brand-threads',
  Mastodon: 'tabler:brand-mastodon',
  Instagram: 'lucide:instagram',
  Spotify: 'tabler:brand-spotify',
  Lastfm: 'tabler:brand-lastfm',
  Goodreads: 'tabler:book',
  Email: 'lucide:mail',
  RSS: 'lucide:rss',
}

const getSocialLink = ({ href, label }: SocialLink) => ({
  href: label === 'Email' ? `mailto:${href}` : href,
  ariaLabel: label,
  iconName:
    iconMap[label as keyof typeof iconMap] || 'lucide:message-circle-question',
})
---

<ul class={cn('not-prose flex flex-wrap gap-2', className)} role="list">
  {
    links.map((link) => {
      const { href, ariaLabel, iconName } = getSocialLink(link)
      return (
        <li>
          <Link
            href={href}
            aria-label={ariaLabel}
            title={ariaLabel}
            class={buttonVariants({ variant: 'social', size: 'icon' })}
            external
          >
            <Icon name={iconName} class="size-6" />
          </Link>
        </li>
      )
    })
  }
</ul>
