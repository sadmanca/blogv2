---
---

<script>
    // Import the medium-zoom library
    import mediumZoom from 'medium-zoom';

    // Use a module pattern to prevent duplicate instances
    (function() {
      // Track initialization state
      let isInitialized = false;
      let currentZoomInstances = [];
      
      // Main initialization function
      function initZoom() {
        console.log('Initializing zoom');
        
        // Aggressively clean up ALL previous instances
        cleanupAllZoom();
        
        // Find all zoom images
        const images = document.querySelectorAll('.zoom-image');
        if (!images || images.length === 0) {
          console.log('No zoom images found');
          return;
        }
        
        console.log(`Creating zoom for ${images.length} images`);
        
        // Create a single new instance for this page
        try {
          const zoom = mediumZoom(images, {
            margin: window.innerWidth < 768 ? 0 : 200,
            background: 'rgba(0, 0, 0, 0.9)',
            scrollOffset: 40,
          });
          
          // Add to our tracking array
          currentZoomInstances.push(zoom);
        } catch (e) {
          console.error('Failed to initialize zoom:', e);
        }
      }
      
      // Thorough cleanup function
      function cleanupAllZoom() {
        console.log('Cleaning up ALL zoom instances');
        
        // Detach all tracked instances
        currentZoomInstances.forEach(instance => {
          try {
            instance.detach();
          } catch (e) {}
        });
        currentZoomInstances = [];
        
        // Remove all overlay elements
        document.querySelectorAll('.medium-zoom-overlay').forEach(el => {
          document.body.removeChild(el);
        });
        
        // Reset all zoom images
        document.querySelectorAll('.medium-zoom-image').forEach(img => {
          img.classList.remove('medium-zoom-image');
          img.removeAttribute('data-zoom-src');
          img.style.transform = '';
        });
      }
      
      // Set up one-time event listeners
      if (!isInitialized) {
        isInitialized = true;
        
        // Initial page load
        if (document.readyState === "loading") {
          document.addEventListener('DOMContentLoaded', initZoom);
        } else {
          initZoom();
        }
        
        // Swup and Astro navigation events
        document.addEventListener('swup:content:replaced', initZoom);
        document.addEventListener('astro:page-load', initZoom);
        
        // Clean up before navigation
        document.addEventListener('swup:will-replace-content', cleanupAllZoom);
        document.addEventListener('astro:before-swap', cleanupAllZoom);
      }
    })();
  </script>
  
  <style is:global>
    .zoom-image {
      cursor: zoom-in !important;
      transition: transform 0.3s cubic-bezier(0.2, 0, 0.2, 1) !important;
    }
    
    .medium-zoom-overlay {
      z-index: 100;
      background-color: rgba(0, 0, 0, 0.9) !important;
      transition: opacity 0.3s ease !important;
      opacity: 0;
    }
    
    .medium-zoom--opened .medium-zoom-overlay {
      opacity: 1;
    }
    
    .medium-zoom-image--opened {
      z-index: 101;
      transition: transform 0.3s cubic-bezier(0.2, 0, 0.2, 1) !important;
      cursor: zoom-out !important;
    }
  </style>