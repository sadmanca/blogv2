---
import { Icon } from 'astro-icon/components'

interface Props {
  type?: 'default' | 'info' | 'warning' | 'flag' | 'destructive'
  icon?: string
  classes?: string
}

const { type = 'default', icon: customIcon, classes: customClasses } = Astro.props

const typeMapping = {
  default: {
    icon: 'lucide:lightbulb',
    classes: 'bg-primary/20',
  },
  info: {
    icon: 'lucide:info',
    classes: 'bg-secondary/50',
  },
  warning: {
    icon: 'lucide:alert-triangle',
    classes:
      'border-yellow-900/100 bg-yellow-100/50 dark:border-yellow-100/100 dark:bg-yellow-900/50',
  },
  flag: {
    icon: 'lucide:flag',
    classes: 'bg-primary/20 justify-center',
  },
  destructive: {
    icon: 'lucide:alert-octagon',
    classes: 'border-red-900/100 bg-red-200/50 dark:border-red-200/100 dark:bg-red-900/50',
  },
}

const { icon, classes } = typeMapping[type]
const finalIcon = customIcon || icon
const finalClasses = customClasses || classes
---

<div class={`relative my-6 flex gap-4 rounded-xl border-2 p-4 ${finalClasses}`}>
  <span class="text-md pointer-events-none select-none relative" style="top: 7px;">
    <Icon name={finalIcon} size={23} />
  </span>
  <div class="-my-4 prose-code:break-all">
    <slot />
  </div>
</div>
