---
import { Image } from 'astro:assets';

const { gridMarginTop = 4, titleMarginTop = 1, ratingMarginBottom = 4, filterYear, filterTitles } = Astro.props;

const TRAKT_URL = 'https://api.trakt.tv/users/sadmanca/watched/movies'; // Replace {username} with the actual username
const TRAKT_CLIENT_ID = '21d632f4344d0df01f8602f8e64f30b4e5ee7e37b7d14989082b528d8c3f23c6'; // Replace with your Trakt API client ID
const TMDB_API_KEY = 'aff1d91cd3e2013154db0527ea0c5f18'; // Replace with your TMDB API key
const LIMIT = 4; // Set the limit for the number of movies to display

let watchedItems = [];

try {
  const response = await fetch(TRAKT_URL, {
    headers: {
      'Content-Type': 'application/json',
      'trakt-api-version': '2',
      'trakt-api-key': TRAKT_CLIENT_ID,
    },
  });

  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }

  const data = await response.json();

  watchedItems = await Promise.all(data.slice(0, LIMIT).map(async (item: any) => {
    const tmdbResponse = await fetch(`https://api.themoviedb.org/3/movie/${item.movie.ids.tmdb}?api_key=${TMDB_API_KEY}&language=en-US`);
    const tmdbData = await tmdbResponse.json();

    return {
      title: item.movie.title,
      year: item.movie.year,
      last_watched_at: item.last_watched_at,
      poster: `https://image.tmdb.org/t/p/w200${tmdbData.poster_path}`, // Use TMDB poster path
      imdb: item.movie.ids.imdb,
    };
  }));
} catch (error) {
  console.error('Error fetching or parsing data from Trakt API:', error);
}

---

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #c3c3c3;
    width: 100%;
    height: 100%;
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
    position: relative;
    z-index: 1;
  }
  .zoomable-image {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
  }
  .zoomable-image.loaded {
    opacity: 1;
  }
</style>

<div class={`mt-${gridMarginTop} trakt`}>
  <div class="grid grid-cols-3 gap-2 sm:grid-cols-6 md:grid-cols-7 lg:grid-cols-7 xl:grid-cols-7">
    {watchedItems.map((item: { title: string; year: number; last_watched_at: string; poster: string }) => (
    <div class="flex flex-col items-center">
      <a
        href={`https://www.imdb.com/title/${item.imdb}`}
        class="h-36 w-24"
        target="_blank"
      >
        <div class="relative h-full w-full">
          <div class="placeholder rounded-md" id={`placeholder-${item.title}`}>
            <div class="h-12 w-12 bg-gray-300 rounded-md"></div>
          </div>
          <Image
            src={item.poster}
            alt={item.title}
            class="h-full w-full rounded-md object-cover zoomable-image"
            title={`${item.title}`}
            width={101}
            height={150}
            onload={`document.getElementById('placeholder-${item.title}').classList.add('hidden'); this.classList.add('loaded');`}
          />
        </div>
      </a>
        <div class={`mt-${titleMarginTop} text-center`}>
          <a 
            href={`https://www.imdb.com/title/${item.imdb}`} 
            class="line-clamp-4 block w-31 text-xs underline"
            style="text-underline-offset: 2px;"
            target="_blank" 
            rel="noopener noreferrer"
            title={`${item.title}`}
          >
            {item.title} ({item.year})
          </a>
          <span 
            class="mt-1 block text-xs text-muted-foreground" 
            title="Last Watched">
              Last Watched: {new Date(item.last_watched_at).toLocaleDateString()}
          </span>            
        </div>
    </div>
    ))}
  </div>
</div>

<style>
.trakt-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 16px;
}

.trakt-item {
  border: 1px solid #ccc;
  padding: 8px;
  text-align: center;
}
</style>